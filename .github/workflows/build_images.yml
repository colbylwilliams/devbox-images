name: Build Images

concurrency: ${{ github.ref }}

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - 'images/**'
      - 'scripts/**'
      # - 'builder/**'
      # - '.github/**'

jobs:
  # build:
  #   # runs-on: windows-latest
  #   runs-on: ubuntu-latest

  #   if: "!contains(join(github.event.commits.*.message), '+nobuild')"

  #   env:
  #     STORAGE_ACCOUNT: devboximagesstorage
  #     SUBNET_ID: /subscriptions/e5f715ae-6c72-4a5c-87c8-495590c34828/resourceGroups/DevBox-Images/providers/Microsoft.Network/virtualNetworks/devbox-images-vnet/subnets/builders

  #   steps:
  #     - uses: actions/checkout@v2

  #     # - name: Login to Azure
  #     #   uses: azure/login@v1
  #     #   with:
  #     #     creds: ${{ secrets.AZURE_CREDENTIALS }}

  #     # OR

  #     - name: Login to Azure
  #       run: az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}

  #     - name: Deploy Build ACI Containers
  #       id: images
  #       run: python "./builder/aci.py" --async --repository "${{ github.repositoryUrl }}" --token "${{ github.token }}" --client-id "${{ secrets.AZURE_CLIENT_ID }}" --client-secret "${{ secrets.AZURE_CLIENT_SECRET }}" --storage-account "${{ env.STORAGE_ACCOUNT }}" --subnet-id "${{ env.SUBNET_ID }}"

  prepare:
    # runs-on: windows-latest
    runs-on: ubuntu-latest

    if: "!contains(join(github.event.commits.*.message), '+nobuild')"

    outputs:
      build: ${{ steps.images.outputs.build }}
      images: ${{ steps.images.outputs.images }}

    steps:
      - uses: actions/checkout@v2

      - name: Get Image Definitions
        id: images
        run: python "./builder/image.py"

  build:
    needs: prepare
    # runs-on: windows-latest
    runs-on: ubuntu-latest

    # this is needed to avoid workflow errors in case of an empty matrix
    if: ${{ needs.prepare.outputs.build == 'true' }}

    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.prepare.outputs.images) }}

    steps:
      - uses: actions/checkout@v2

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # OR

      # - name: Login to Azure
      #   run: az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}

      - name: Build ${{ matrix.name }} with ${{ matrix.builder }}
        run: python "./builder/build.py" --suffix ${{ github.run_number }} --images ${{ matrix.name }}
