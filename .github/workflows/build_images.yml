name: Build Images

concurrency: ${{ github.ref }}

env:
  # if true, an Azure Container Instance will be deployed to execute the packer builds
  # if false, the GitHub Action runner will execute the packer builds
  USE_ACI: true

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - 'images/**'
      - 'scripts/**'
      # - 'builder/**'
      # - '.github/**'

jobs:
  aci:
    # runs-on: windows-latest
    runs-on: ubuntu-latest

    if: "env.USE_ACI == 'true' && !contains(join(github.event.commits.*.message), '+nobuild')"

    steps:
      - uses: actions/checkout@v2

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Build ACI Containers
        id: images
        run: python "./builder/aci.py" --suffix ${{ github.run_number }} --build

  prepare:
    # runs-on: windows-latest
    runs-on: ubuntu-latest

    if: "env.USE_ACI != 'true' && !contains(join(github.event.commits.*.message), '+nobuild')"

    outputs:
      build: ${{ steps.images.outputs.build }}
      images: ${{ steps.images.outputs.images }}

    steps:
      - uses: actions/checkout@v2

      - name: Get Image Definitions
        id: images
        run: python "./builder/images.py"

  build:
    needs: prepare
    # runs-on: windows-latest
    runs-on: ubuntu-latest

    # this is needed to avoid workflow errors in case of an empty matrix
    if: ${{ needs.prepare.outputs.build == 'true' }}

    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.prepare.outputs.images) }}

    steps:
      - uses: actions/checkout@v2

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build ${{ matrix.name }} with ${{ matrix.builder }}
        run: python "./builder/build.py" --suffix ${{ github.run_number }} --images ${{ matrix.name }} --build
